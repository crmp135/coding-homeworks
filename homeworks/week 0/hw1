Git是什麼？

Git是一個可以用來做版本控制的軟體。這件事在一個檔案可以多次修改、儲存、沿用的狀況下，也許不是那麼重要，因為這個檔案已經包含了上一次編輯後的所有內容。
但如果同時想要保留舊的版本，也想要編輯檔案加入新的東西時，就得另存新檔，然後取另一個檔名。重複多次以後，檔案的數量跟名稱會變得越來越複雜，雖然可以透過有規律、有順序地命名來整理，但如果檔案逐漸發展出多個分支時，就會變得難以管理。
在多人協作的情況下，這種作法也可能出問題，萬一有兩個人同時新增了一個版本，都用同樣的序數命名，修改的內容卻不一樣，這樣就會產生混淆。
透過Git，可以整理哪些檔案要加入版本控制，也可以為每個版本加上註解、檢視過去的編輯紀錄和兩個版本之間的差異等等，也可以在不同的版本間切換。
Git會將各版本以亂數命名，避免上述以序數命名時可能會出現的重複問題。雖然亂數不像序數一樣，可以一目了然版本彼此間的順序關係，但Git會自動整理出各個亂數的順序，也會列出哪一個是最新版本。
在Git中也可以建立分支。比如說檔案1中有ABC三樣東西，我現在想要新增D，但不想直接加到檔案1中跟ABC一起。這時候我就可以利用這個功能，建立兩個分支，一個分支中有ABC，另一個有D，兩個分支可以各自修改不衝突，最後當兩個分支都完成後，可以再合併起來。

GitHub又是什麼？

可以把GitHub理解成一個倉儲空間，大門的鑰匙有好幾副，這個專案要協作的人都有鑰匙。在這個倉儲空間中，存放的就是經由Git執行版本控制的專案。
將專案上傳到GitHub上面後，協作的人就可以檢視檔案或是把檔案抓下來使用。
不一定要用GitHub才能使用Git，單人作業的話可以自己在電腦上用Git進行版本控制，多人協作的話也可以自己架server；但是用GitHub進行協作的話，就一定會使用到Git。
